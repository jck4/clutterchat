version: '2.1'
services:
  db:
    image: postgres:9.4.1
    env_file:
      - ./.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: bitnami/redis:latest
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
  db_create:
    build:
      context: .
      args:
        - BUNDLE_PACKAGER__DEV=${BUNDLE_PACKAGER__DEV}
    command: bash -c 'bin/rails db:create && bin/rails db:migrate && bin/rails db:seed'
    env_file:
      - ./.env
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/augury_one
  sidekiq:
    build:
      context: .
      args:
        - BUNDLE_PACKAGER__DEV=${BUNDLE_PACKAGER__DEV}
    command: bash -c 'bundle exec sidekiq'
    env_file:
      - ./.env
    links:
      - db
      - web
      - redis
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/augury_one
  web:
    build:
      context: .
      args:
        - BUNDLE_PACKAGER__DEV=${BUNDLE_PACKAGER__DEV}
    command: foreman start -f Procfile.dev
    env_file:
      - ./.env
    ports:
      - 3000:3000
    links:
      - db
      - redis
      - mailhog
    depends_on:
      - db
      - db_create
    volumes:
      - .:/augury_one
  dev:
    image: ruby:3.3.4-bullseye
    build:
      args:
        - BUNDLE_PACKAGER__DEV=${BUNDLE_PACKAGER__DEV}
    command: /bin/sh -c "while sleep 1000; do :; done"
    env_file:
      - ./.env
    links:
      - web
      - db
      - redis
      - mailhog
    volumes:
      - .:/augury_one
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command: http http://web:3000 --log stdout --hostname $NGROK_HOST
    links:
      - web
    depends_on:
      - web
    env_file:
      - ./.env
    ports:
      - 4040:4040
  stripe:
    image: stripe/stripe-cli
    restart: unless-stopped
    command: listen --forward-to https://$NGROK_HOST/pay/webhooks/stripe --api-key $STRIPE_PRIVATE_KEY
    env_file:
      - ./.env
    links:
      - web
      - ngrok
    depends_on:
      - web
      - ngrok